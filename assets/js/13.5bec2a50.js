(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{479:function(e,r,n){"use strict";n.r(r);var t=n(60),a=Object(t.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"in-system-programming-isp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-system-programming-isp"}},[e._v("#")]),e._v(" In-System-Programming (ISP)")]),e._v(" "),t("p",[e._v("Grundsätzlich wird ein ATMega Mikrocontroller über das "),t("a",{attrs:{href:"https://de.wikipedia.org/wiki/In-System-Programmierung",target:"_blank",rel:"noopener noreferrer"}},[t("em",[e._v("In-System-Programming")]),e._v(" Interface"),t("OutboundLink")],1),e._v(", kurz ISP, programmiert. Zudem dient die ISP-Schnittstelle dazu Konfiguartionsparameter ("),t("a",{attrs:{href:"https://de.wikipedia.org/wiki/Fuse-Bit",target:"_blank",rel:"noopener noreferrer"}},[e._v('"Fuse-Bits"'),t("OutboundLink")],1),e._v(") zu setzen.")]),e._v(" "),t("p",[e._v("Als bevorzugter ISP-Programmer hat sich der "),t("a",{attrs:{href:"https://www.diamex.de/dxshop/USB-ISP-Programmer-fuer-Atmel-AVR-Rev2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Diamex Programmer"),t("OutboundLink")],1),e._v(" etabliert.\nAlternativ lässt sich auch ein "),t("a",{attrs:{href:"https://www.arduino.cc/en/Tutorial/ArduinoISP",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arduino UNO als ISP"),t("OutboundLink")],1),e._v(" verwenden oder der kostengünstige\n"),t("a",{attrs:{href:"https://www.ebay.de/itm/USBASP-AVR-Programmer-Adapter-Downloader-10-Pin-Kabel-ATTiny-USBISP/181667298888",target:"_blank",rel:"noopener noreferrer"}},[e._v("USBASP-Clone"),t("OutboundLink")],1),e._v(". Allerdings lässt sich in beiden Fällen nur die Stromversorgung auf 3.3V Stellen. Die SPI-Pegel haben weiterhin 5V wodurch ein ggf. schon verbautes CC1101 Modul Schaden nehmen kann.")]),e._v(" "),t("p",[e._v("Die ISP-Schnittstelle des ATMega ist die SPI-Schnittstelle.")]),e._v(" "),t("p",[t("strong",[e._v("Zusätzlich")]),e._v(" gibt es die "),t("strong",[e._v("serielle UART-Schnittstelle")]),e._v(" die über einen FTDI, CH340 oder CP2102 "),t("em",[e._v("USB-serial-converter")]),e._v(" angesprochen wird.\nHierüber kann man "),t("em",[e._v("eigentlich")]),e._v(" keine Software flashen, sondern nur die "),t("em",[e._v("Serielle-Console")]),e._v(" aufrufen. Da viele Boards (wie der "),t("em",[e._v("Arduino Pro-Mini")]),e._v(")\nmit einem Bootloader vorkonfiguriert sind, der das Flashen von Sketches über UART ermöglicht, benötigt man keinen ISP-Programmer um die Software aufzuspielen. Dies ist für "),t("em",[e._v("nackte")]),e._v(" Chips meist nicht der Fall, weshalb zuerst über ISP ein Bootloader geflasht werden kann (sofern man über UART später die Software aufspielen will).")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("ISP")]),e._v(": Software flashen; Fuse-Bits setzen")]),e._v(" "),t("li",[t("strong",[e._v("UART")]),e._v(": Serieller-Monitor; Software flashen (nur mit entsprechendem Bootloader)")])]),e._v(" "),t("h2",{attrs:{id:"anschluss-des-isp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#anschluss-des-isp"}},[e._v("#")]),e._v(" Anschluss des ISP")]),e._v(" "),t("p",[e._v("Die Spannung des Diamex wird über DIP-Schalter gesetzt, siehe "),t("a",{attrs:{href:"https://www.diamex.de/dxshop/USB-ISP-Programmer-fuer-Atmel-AVR-Rev2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Manual"),t("OutboundLink")],1),e._v(" unter Download (1: off; 2: on).")]),e._v(" "),t("p",[t("img",{attrs:{src:n(650),alt:"DIAMEX ISP Programmer"}})]),e._v(" "),t("p",[e._v("USBasp kann sowohl 5V als auch 3.3V - ! jedoch nur am Vcc !, hier sollte zuerst der Jumper auf die richtige Spannung gesetzt werden.")]),e._v(" "),t("p",[t("img",{attrs:{src:n(651),alt:"usb-asp Spannung Jumper"}})]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("USBasp setzt per Jumper nur VCC auf 3.3V, das SPI Interface läuft weiterhin mit 5V.\nEs empfiehlt sich daher die Fuse-Bits zu programmieren bevor weitere Hardware oder das CC1101 an den Arduino SPI-Bus angeschlossen ist. "),t("strong",[e._v("Deshalb ist ein Diamex-Programmer einem USBasp vorzuziehen!")])])]),e._v(" "),t("p",[e._v("Der ISP ist 1:1 mit 6 Leitungen an den Pro Mini zu verbinden bzw. nach Angabe des Pin-Outs bei dem jeweiligen Projekt.")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Pro Mini")]),e._v(" "),t("th",[e._v("ISP")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("VCC")]),e._v(" "),t("td",[e._v("VCC")])]),e._v(" "),t("tr",[t("td",[e._v("GND")]),e._v(" "),t("td",[e._v("GND")])]),e._v(" "),t("tr",[t("td",[e._v("RESET")]),e._v(" "),t("td",[e._v("RESET")])]),e._v(" "),t("tr",[t("td",[e._v("11")]),e._v(" "),t("td",[e._v("MOSI")])]),e._v(" "),t("tr",[t("td",[e._v("12")]),e._v(" "),t("td",[e._v("MISO")])]),e._v(" "),t("tr",[t("td",[e._v("13")]),e._v(" "),t("td",[e._v("SCK")])])])]),e._v(" "),t("p",[t("img",{attrs:{src:n(652),alt:"usb-asp Verdrahtung"}})]),e._v(" "),t("p",[e._v("Es gibt auch ISPs mit nur 6 PINS:")]),e._v(" "),t("p",[t("img",{attrs:{src:n(653),alt:"isp 6-pin"}})]),e._v(" "),t("p",[t("img",{attrs:{src:n(654),alt:"usb-asp Jumperwire"}})]),e._v(" "),t("h2",{attrs:{id:"avrdude"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#avrdude"}},[e._v("#")]),e._v(" avrdude")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://savannah.nongnu.org/projects/avrdude/",target:"_blank",rel:"noopener noreferrer"}},[e._v("avrdude"),t("OutboundLink")],1),e._v(" ist ein Commandline-Tool zur Manipulation von ROM und EEPROM der AVR-Mikrocontroller. Es ist für Windows, MacOS und Linux verfügbar und unterstützt verschiedene ISP-Programmer.")]),e._v(" "),t("p",[e._v("Eine Alternative bietet das "),t("em",[e._v("schwergewichtige")]),e._v(" "),t("a",{attrs:{href:"https://www.microchip.com/mplab/avr-support/atmel-studio-7",target:"_blank",rel:"noopener noreferrer"}},[e._v("Atmel Studio"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Für avrdude gibt es verschiedene GUI-Tools wie z. B. "),t("a",{attrs:{href:"https://blog.zakkemble.net/avrdudess-a-gui-for-avrdude/",target:"_blank",rel:"noopener noreferrer"}},[e._v("avrdudess"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Je nach ISP und Betriebssystem sind etwaige Treiber zu installieren. USBasp benötigt einen "),t("a",{attrs:{href:"http://zadig.akeo.ie",target:"_blank",rel:"noopener noreferrer"}},[e._v('speziellen USB-Treiber "libusb"'),t("OutboundLink")],1),e._v(". Diamex Windows-Treiber sind als Download auf der "),t("a",{attrs:{href:"https://www.diamex.de/dxshop/USB-ISP-Programmer-fuer-Atmel-AVR-Rev2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hersteller-Seite"),t("OutboundLink")],1),e._v(" verfügbar")]),e._v(" "),t("p",[e._v("avrdude befindet sich bei "),t("strong",[e._v("installierter Arduino IDE und Boardunterstützung "),t("em",[e._v("Arduino AVR Boards")])])]),e._v(" "),t("ul",[t("li",[e._v("in Windows:\n"),t("ul",[t("li",[t("code",[e._v("C:\\Users\\<Benutzer>\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino14\\bin\\")])])])]),e._v(" "),t("li",[e._v("auf dem Mac:\n"),t("ul",[t("li",[t("code",[e._v("~/Library/Arduino15/packages/arduino/tools/avrdude/6.3.0-arduino14/bin/")])])])]),e._v(" "),t("li",[e._v("bei Linux:\n"),t("ul",[t("li",[t("code",[e._v("~/.arduino15/packages/arduino/tools/avrdude/6.3.0-arduino14/bin/")])]),e._v(" "),t("li",[e._v("Alternativ gibt es das avrdude auch in den meisten Repos und kann als globale Binary installiert werden ("),t("code",[e._v("apt-get install avrdude")]),e._v(")")])])])]),e._v(" "),t("p",[t("em",[e._v("(Der Ordner "),t("code",[e._v("6.3.0-arduino14")]),e._v(" kann je nach Version abweichen.)")])]),e._v(" "),t("p",[e._v("Natürlich müssen die jeweiligen avrdude-Optionen an die verwendete Umgebung angepasst werden:")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("Port ("),t("code",[e._v("-P")]),e._v(")")]),t("br"),e._v("\nUnter Windows wird hier ein COMxx Device verwendet, z. B. "),t("code",[e._v("-P COM11")]),e._v(". Im Gerätemanager kann die Nummer nachgelesen werden."),t("br"),e._v("\nUnter Linux oder Mac wird ein Device unter /dev/ angelegt, z. B. "),t("code",[e._v("-P /dev/ttyACM0")]),e._v(" oder "),t("code",[e._v("-P /dev/ttyUSB0")]),e._v(", der Befehl "),t("code",[e._v("dmesg")]),e._v(" gibt Aufschluss, nachdem der ISP am USB-Port angeschlossen wurde.\n"),t("img",{attrs:{src:n(655),alt:"Gerätemanager"}})])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("ISP-Programmer ("),t("code",[e._v("-c")]),e._v(")")]),t("br"),e._v("\nFür einen Diamex: "),t("code",[e._v("-c stk500v2")]),t("br"),e._v("\nFür einen USBasp: "),t("code",[e._v("-c usbasp")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Controller ("),t("code",[e._v("-p")]),e._v(")")]),t("br"),e._v("\nFür den ATMega 328P: "),t("code",[e._v("-p m328p")])])])]),e._v(" "),t("p",[e._v("Weitere Parameter können dem "),t("a",{attrs:{href:"https://www.nongnu.org/avrdude/user-manual/avrdude_4.html#Option-Descriptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("avrdude Manual"),t("OutboundLink")],1),e._v(" entnommen werden.")]),e._v(" "),t("p",[e._v("Zuletzt wird mit "),t("code",[e._v("-U")]),e._v(" die auszuführende "),t("em",[e._v("Memory-Operation")]),e._v(" angegeben, als z. B. Fuse-Bits setzen oder HEX-File flashen. Es sind mehrere -U Argumente pro Aufruf möglich.\nAllgemeiner Syntax: "),t("code",[e._v("-U memtype:op:filename[:format]")]),e._v(".")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("Die Parameter-Argumente dürfen keine Leerzeichen enthalten. z. B. wäre "),t("code",[e._v("-U flash:w:C:\\Users\\Max Mustermann")]),e._v(" ungültig da Leerzeichen sowie ein zusätzlicher Doppelpunkt enthalten ist.")])]),e._v(" "),t("p",[e._v("Siehe auch:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.mikrocontroller.net/articles/AVRDUDE",target:"_blank",rel:"noopener noreferrer"}},[e._v("avrdude - Mikrocontroller.net"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.nongnu.org/avrdude/user-manual/avrdude.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("avrdude Manual"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/zkemble/AVRDUDESS",target:"_blank",rel:"noopener noreferrer"}},[e._v("avrdudes (GUI für avrdude)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.engbedded.com/fusecalc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fuse Calculator"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"fuse-bits-setzen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fuse-bits-setzen"}},[e._v("#")]),e._v(" Fuse-Bits setzen")]),e._v(" "),t("p",[e._v("Beispiel Fuse-Bits setzen: "),t("code",[e._v("-U lfuse:w:0xE2:m -U hfuse:w:0xD2:m -U efuse:w:0xFF:m -U lock:w:0xFF:m")])]),e._v(" "),t("p",[e._v("Memtype gibt hier die Low-/High-/Extended- und Lock-Fuses an. Der "),t("code",[e._v("w")]),e._v("-Paramter steht für "),t("em",[e._v("write")]),e._v(", gefolgt von dem zu setzendem Wert. "),t("code",[e._v("m")]),e._v(" aktiviert den "),t("em",[e._v("immediate mode")]),e._v(" und besagt, dass "),t("em",[e._v("filename")]),e._v(" keine Datei ist, sondern der Wert direkt angegeben wurde. Nach dem setzen der Fuse-Bits können wir diese mit der "),t("em",[e._v("verify")]),e._v("-Operation "),t("code",[e._v("v")]),e._v(" überprüfen, also z. B. "),t("code",[e._v("-U lfuse:v:0xE2:m")]),e._v(".")]),e._v(" "),t("p",[e._v("Ein vollständiger Aufruf könnte also wiefolgt aussehen:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Fuses setzen")]),e._v("\navrdude -p m328p -P /dev/ttyACM3 -c stk500v2 -U lfuse:w:0xE2:m -U hfuse:w:0xD2:m -U efuse:w:0xFF:m -U lock:w:0xFF:m\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Fuses prüfen")]),e._v("\navrdude -p m328p -P /dev/ttyACM3 -c stk500v2 -U lfuse:v:0xE2:m -U hfuse:v:0xD2:m -U efuse:v:0xFF:m -U lock:v:0xFF:m\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h3",{attrs:{id:"sketch-bootloader-flashen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sketch-bootloader-flashen"}},[e._v("#")]),e._v(" Sketch (Bootloader) flashen")]),e._v(" "),t("p",[e._v("Beispiel HEX-File flashen, hier der "),t("a",{attrs:{href:"https://raw.githubusercontent.com/pa-pa/AskSinPP/master/bootloader/avr/ATmegaBOOT_168_atmega328_pro_8MHz.hex",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bootloader"),t("OutboundLink")],1),e._v("\nder es ermöglicht Software über die UART Schnittstelle zu flashen. Da hier eine "),t("strong",[e._v("Datei")]),e._v(" geflasht wird ist darauf zu achten, dass der avrdude-Aufruf\naus dem gleichen Verzeichnis erfolgt, in dem auch die Datei liegt. Im Beispiel wird ein Diamex verwendet welcher auf /dev/ttyACM3 erkannt wurde und ein ATMega 328P.")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Schreiben des Arudino Bootloaders")]),e._v("\navrdude -p m328p -P /dev/ttyACM3 -c stk500v2 -V -U flash:w:ATmegaBOOT_168_atmega328_pro_8MHz.hex\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Bootloader verifizieren")]),e._v("\navrdude -p m328p -P /dev/ttyACM3 -c stk500v2 -U flash:v:ATmegaBOOT_168_atmega328_pro_8MHz.hex\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"problembehandlung"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#problembehandlung"}},[e._v("#")]),e._v(" Problembehandlung")]),e._v(" "),t("p",[t("code",[e._v("avrdude: stk500_getsync(): not in sync: resp=0x00")]),t("br"),e._v(" "),t("code",[e._v("avrdude: stk500_recv(): programmer is not responding")])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Parameter prüfen (-p, -P, -c, ...)")])]),e._v(" "),t("li",[t("strong",[e._v("Anschluss / Verkabelung überprüfen!!!")])]),e._v(" "),t("li",[e._v("Trennen und erneut verbinden des ISP")]),e._v(" "),t("li",[e._v("Trennen und erneut verbinden der AVR Stromversorgung (sofern nicht über ISP)")]),e._v(" "),t("li",[e._v("Für gewisse Programmer kann auch die Bitclock angepasst werden (z. B. "),t("code",[e._v("-B 10")]),e._v(")")])])])}),[],!1,null,null,null);r.default=a.exports},650:function(e,r,n){e.exports=n.p+"assets/img/isp_diamex.37202c8a.jpg"},651:function(e,r,n){e.exports=n.p+"assets/img/usbavp-jumper.7eb06634.jpg"},652:function(e,r,n){e.exports=n.p+"assets/img/usbasp-wiring.1e0d72d1.jpg"},653:function(e,r,n){e.exports=n.p+"assets/img/isp-6-pinout.3dc33651.png"},654:function(e,r,n){e.exports=n.p+"assets/img/usb-asp-jumperwire.6d058edf.jpg"},655:function(e,r,n){e.exports=n.p+"assets/img/isp_com-port.ea3b6523.png"}}]);